Aula 1 

Nuvem trata-se de uma rede extensa de servidores remotos em todo o mundo. Basicamente é um termo utilizado para descrever uma rede global de servidores, cada um com uma função única. Ademais não é uma entidade física, mas uma vasta rede de servidores remotos ao redor do globo que são conectados e operam como um único ecossistema.
Algoritmo é o conjunto de instruções e regras que um programa de computador (mas não apenas ele) possui para executar suas funções. é um conjunto de instruções, como uma receita de bolo, constituído de um número finito de passos. Para que os dados sejam processados, há a necessidade de se utilizar uma linguagem de programação, pois os computadores não executam diretamente os algoritmos.
Zero - rating consiste em uma oferta de acesso móvel a conteúdos e aplicativos previamente determinados pelo provedor ao usuário, sem que isso implique custos adicionais.
Um banco de dados é uma coleção organizada de informações - ou dados - estruturadas, normalmente armazenadas eletronicamente em um sistema de computador.
Sistema de arquivo (file system) é um conjunto de regras e estruturas usadas para organizar, gerenciar e armazenar informações em HDDs, módulos SSDs, CDs, DVDs, pen drives e cartões de memória. São essas regras que determinam como os dados serão gravados no dispositivo de armazenamento.

Bibliografia:
https://www.controle.net/faq/o-que-e-sistema-de-arquivos-file-system#:~:text=Sistema%20de%20arquivo%20(file%20system,gravados%20no%20dispositivo%20de%20armazenamento.
https://www.oracle.com/br/database/what-is-database/#:~:text=Um%20banco%20de%20dados%20%C3%A9,banco%20de%20dados%20(DBMS).
https://irisbh.com.br/zero-rating-uma-medida-de-excecao/#:~:text=Basicamente%2C%20o%20zero%2Drating%20consiste,que%20isso%20implique%20custos%20adicionais.
https://tecnoblog.net/responde/o-que-e-algoritmo/
https://azure.microsoft.com/pt-br/resources/cloud-computing-dictionary/what-is-the-cloud/

Aula 2

1-a. A LGPD é a legislação brasileira que regula as atividades de tratamento de dados pessoais e visa proteger os direitos fundamentais de liberdade, privacidade e livre desenvolvimento da personalidade da pessoa natural. 
Esta lei trouxe a exigência que muitas empresas tivessem que se adaptar novas regras de privacidade de dados. com os Data Centers não foi diferente, já que esse  deve operar com base nos preceitos da LGPD. Essa instalação física onde são concentrados equipamentos de computação e redes para coletar, armazenar, processar, distribuir e permitir o acesso a grandes volumes de dados. 
É importante frisar que apesar de não atuar diretamente no processamento de dados dos usuários e de não exercer a responsabilidade sobre tais informações, cabe aos Data Centers (operador), garantir a proteção física dos ambientes para que a gestão das informações seja segura.
Por fim, para que um provedor de Data Center se proteja contra danos físicos, que podem influenciar na proteção dos dados de seus clientes, o ideal é seguir as premissas da LGPD, investir em redundância, mesmo que os dados sejam guardados na nuvem. Sem contar que é importantíssimo prezar pela segurança do local, com controles e verificação de acesso. Já contra a proteção de danos virtuais, é necessário dispor de tecnologias de segurança, como a criptografia de dados, firewalls e programas antimalware, que tornam a intercepção de informação mais difícil.

Sob essa lógica, destaca-se, ainda, alguns requisitos fundamentais para assegurar as condições de segurança e as premissas da LGPD para Data Centers:

Mapeamento de quais dados são tratados, por quais áreas e com qual finalidade;
Atualização de softwares e sistemas de controle de hardware;
Monitoramento frequente de recursos;
Política de controle de acesso físico e online;
Divulgação e treinamento dos colaboradores com relação às boas práticas de TI;

Sobre Armazenamento de dados fora do país e a LGPD:
De forma simples, para a LGPD, a transferência internacional de dados pessoais ocorre sempre que algum dado pessoal (referente a uma pessoa física, via de regra) é enviado, armazenado ou acessado de um país estrangeiro. Assim, o simples armazenamento fora do país já caracteriza a transferência internacional.
Para que essa transferência internacional seja possível, é necessário que haja uma situação autorizativa trazida pela LGPD. Ao todo, no texto da lei, são 9 hipóteses que permitem essa transferência. As mais importantes são duas: decisão de adequação e cláusulas padronizadas.
Decisões de adequação são decisões emitidas pela Autoridade Nacional de Proteção de Dados que, na prática, listam uma série de países nos quais a transferência internacional pode ocorrer de forma livre, desde que haja uma garantia, nas legislações desses países, dos direitos dos titulares.
Atualmente, não existe esta lista de países. Mas, muito provavelmente, pelo rigor da legislação, é provável que, no futuro, os países da Europa sejam considerados adequados e, portanto, a transferência para lá seja menos burocrática.
Cláusulas padronizadas, de forma simples, são cláusulas elaboradas pela ANPD que trazem uma série de obrigações e que devem constar nos contratos firmados entre as Partes que irão transferir internacionalmente os dados pessoais.
Contudo, esse mecanismo ainda não foi regulamentado pela ANPD.
Como se vê, muitos pontos relativos à transferência internacional de dados pessoais ainda não foram definidos pela ANPD.
Nesta situação, como não há, ainda, regulamentação dada pela ANPD, entende-se que esta não poderia aplicar as sanções previstas, ainda que a lei já esteja totalmente em vigor, o que não implica, entretanto, que a transferência internacional possa ser feita de qualquer maneira.
Do ponto de vista jurídico: transparência ao titular dos dados pessoais, cláusulas contratuais que preveem que a empresa que armazenará os dados vai tratá-los de forma confidencial e de acordo com o exigido pela legislação, bem como mapeamento dos dados que serão transferidos internacionalmente;
Do ponto de vista técnico: implementar algumas medidas para proteção da confidencialidade dos dados (criptografia, backup, 2FA, logs para auditoria, limitação de acesso etc).
Com isso, enquanto pende a regulamentação da ANPD, a transferência internacional poderá ser realizada de forma um pouco mais segura, tanto jurídica quanto tecnicamente.

LGPD estabelece que qualquer dado estabelecido no BR, estrangeiro passou por aqui e se utilizou site no Brasil, deve ser tratado conforme nossas normas. O dado pode estar armazenado na montanha da Suiça, ainda assim, ele é operador de dado e deve obedecer LGPD.

Arquivo de dados é um conjunto de dados relacionado semanticamente, ele representa uma informação e damos um nome. O formato de arquivo há regra de formação 
b. Um formato aberto, em informática, indica uma especificação técnica de domínio público usada para a descrição e armazenamento de dados digitais, livre de restrições legais para seu uso.
O principal objetivo dos formatos abertos é garantir o acesso aos dados a longo prazo sem inseguranças jurídicas ou restrições devidas às especificações técnicas: em outras palavras, garantir a interoperabilidade. Outro objetivo do formato aberto é incentivar a concorrência, ao invés de permitir que um único fabricante detenha o controle sobre um formato proprietário. São abertos quando qualquer pessoa pode livremente acessá-los, utilizá-los, modificá-los e compartilhá-los para qualquer finalidade, estando sujeito a, no máximo, a exigências que visem preservar sua proveniência e sua abertura”.
Os formatos proprietários são, na verdade, controlados e definidos por interesses privados. Com o formato proprietário, o usuário corre o risco de perder todas as informações contidas no arquivo caso o software pare de funcionar ou fosse descontinuado, já que não teria outro sistema capaz de processá-las. Todas as informações coletadas nos arquivos públicos (órgãos, instituições, administração, etc.) se tornariam ilegíveis e inutilizáveis em muito pouco tempo. A título de exemplo, o formato MP3 é proprietário mas também aberto porque, se bém patenteado, suas especificações são públicas. Tornar públicas as especificações técnicas é uma maneira de difundir o formato e torná-lo um padrão internacional.

Interoperabilidade: capacidade de programas diferentes, trabalharem juntos. O arquivo aberto permite que desenvolovedor faça arquivos diferentes.

b.1: Exemplos de formatos de arquivos de dados:
aberto: HTML, JSON (JavaScript Object Notation), txt, odt, PDF

proprietários: MP3, DOC, PPT, PDF

b.2 Os dados públicos são dados provenientes da atuação estatal. São informações abertas sem restrições de privacidade, segurança ou controle de acesso, ou seja, estão livres para serem analisados, modificados e até compartilhados pela web. Diariamente ao navegar pela internet é certo o encontro com dados públicos.
Existem, ainda, 8 princípios que regem a classificação dos dados públicos, elaborados por um grupo de pesquisadores da Open Government Data, e são eles: (1) Completos; (2) Primários; (3) Atuais; (4) Acessíveis; (5) Processáveis por máquina; (6) Acesso não discriminatório; (7) Formatos não proprietários; e (8) Livres de licenças. Um exemplo de dados públicos são as pesquisas realizadas pelo IBGE que todo mundo já usou como referência para algum projeto. 
Devem estar preferencialmente em formatos de arquivo aberto, segundo recomendação do TCU.

Esses dados nem sempre estão disponibilizados em formato aberto.  O formato é gerado por software específico e por necessidade técnica, exige a funcionalidade, por isso acontece de não ser em formato aberto. Outro motivo é para diminiuir a publicidade do dado, interesse comercial, software proprietário gera muita renda. Frisou que proprietários não são mais seguros.

Todavia, essa liberdade vem acompanhada de implicações como privacidade e proteção de dados, para não expor informações pessoais sensíveis que comprometam  a privacidade. A segurança da informação para evitar usos mal-intencioandos e hacking e phishing. Por fim, a qualidade e precisão desses dados, já que desatualizados ou incorretos podem levar a análises errôneas e  decisões inadequadas, afetando a confiabilidade.


Aula 3

1- C++:
Criado por Bjarne Stroustrup, é como se fosse superset de C que introduz o paradigma de programação orientada a objetos. Essa linguagem é amplamente utilizada no desenvolvimento de softwares onde o desempenho é essencial, como aplicativos gráficos, jogos e sistemas em tempo real.
Phyton:
É uma linguagem de programação de alto nível e de propósito generalista. Sua filosofia de design enfatiza a legibilidade do código com a proposta de ser de fácil compreensão com o uso de palavras-chave em inglês. Não costuma utilizar recursos gráficos como chaves e colchetes para delimitar blocos.
Java:
Ao contrário do que o nome pode levar a crer, Java e JavaScript não são linguagens que derivam uma da outra ou similares. É uma linguagem de alto nível projetada para ter o menor número possível de dependências de implementação. Dessa forma, os programadores escrevem o código uma única vez e ele pode ser executado em qualquer plataforma que comporte essa linguagem de programação.

a e b. O link a seguir demonstra os códigos realizados, bem como a execução: https://github.com/arrudarrafael/Projeto-Integrador.git

Aula 4
1. Estrutura de repetição

Nomes = ('Luiz', 'Eduardo','Gabriel','Eduardo')
for Nomes in Nomes:
    print (Nomes)

Comprovante de execução: https://github.com/arrudarrafael/Projeto-Integrador/blob/main/1.PNG

1.2) Estrutura de tomada de decisão:

#Variável Idade
Idade = 17

# Condição para verificar a Idade
if Idade >= 18:
    print ("Autorizado a beber álcool.")
else:
    print("Não autorizado a beber álcool.")

Comprovante de execução: https://github.com/arrudarrafael/Projeto-Integrador/blob/main/2.PNG



Aula 5
1 – implemente o algoritmo de ordenação Bubble Sort usando python:

def bubbleSort(alist):
    for passnum in range(len(alist)-1, 0, -1):
        houve_troca = False
        for i in range(passnum):
            if alist[i] > alist[i+1]:
                alist[i], alist[i+1] = alist[i+1], alist[i]
                houve_troca = True
        if not houve_troca:
            break

# Exemplo de uso
alist = [64, 34, 25, 12, 22, 11, 90]
print("Lista original:", alist)
bubbleSort(alist)
print("Lista ordenada:", alist)

Saída do programa:
Lista original: [64, 34, 25, 12, 22, 11, 90]
Lista ordenada: [11, 12, 22, 25, 34, 64, 90]

2- implemente um algorítmo que imprima apenas as vogais de uma
determinada palavra ou frase

def imprimir_vogais(texto):                                                for letra in frase:
    # Definir as vogais                                                    if letra in vogais:
    vogais = "aeiouAEIOU"                                                  print (letra, end+"")
    # Iterar sobre cada caractere no texto
    resultado = [letra for letra in texto if letra in vogais]
    
    # Imprimir as vogais encontradas
    print("Vogais encontradas:", " ".join(resultado))

# Exemplo de uso
frase = "Bom dia Família"
imprimir_vogais(frase)

Saída do programa:
Vogais encontradas: o i a a i a

11/09

1- def imprimir_informacoes(nome, idade, cidade):
    print("Nome:", nome, sep=' ', end=' - ')
    print("Idade:", idade, sep=' ', end=' - ')
    print("Cidade:", cidade, sep=' ', end='!')

# Exemplo de uso da função
imprimir_informacoes("Rafael", 22, "Rio de Janeiro")

Nome: Rafael - Idade: 22 - Cidade: Rio de Janeiro!

** Process exited - Return Code: 0 **
Press Enter to exit terminal

2- def calculadora():
    # Solicita ao usuário o primeiro número
    num1 = float(input("Digite o primeiro número: "))
    # Solicita ao usuário o segundo número
    num2 = float(input("Digite o segundo número: "))
    # Solicita ao usuário a operação desejada
    operacao = input("Digite a operação desejada (+, -, *, /): ")

    # Calcula o resultado com base na operação
    if operacao == '+':
        resultado = num1 + num2
    elif operacao == '-':
        resultado = num1 - num2
    elif operacao == '*':
        resultado = num1 * num2
    elif operacao == '/':
        if num2 != 0:
            resultado = num1 / num2
        else:
            print("Erro: Divisão por zero não é permitida.")
            return
    else:
        print("Operação inválida. Por favor, escolha +, -, * ou /.")
        return

    # Imprime o resultado
    print(f"O resultado de {num1} {operacao} {num2} é {resultado}")

# Exemplo de uso da função
calculadora()

Digite o primeiro número: 
7
Digite o segundo número: 
8
Digite a operação desejada (+, -, *, /): 
-
O resultado de 7.0 - 8.0 é -1.0


** Process exited - Return Code: 0 **
Press Enter to exit terminal

3- def criar_lista_de_compras():
    # Solicita ao usuário para digitar os itens separados por vírgula
    entrada = input("Digite os itens da lista de compras: ")
    
    # Divide a entrada em uma lista de itens, removendo espaços extras
    itens = [item.strip() for item in entrada.split(',')]
    
    # Imprime os itens com um índice
    for i, item in enumerate(itens, start=1):
        print(f"Item {i}: {item}")

# Chama a função
criar_lista_de_compras()

Digite os itens da lista de compras: 
arroz, feijão, pimenta, abóbora
Item 1: arroz
Item 2: feijão
Item 3: pimenta
Item 4: abóbora


** Process exited - Return Code: 0 **
Press Enter to exit terminal

4- Temperatura = int(input("Digite a temperatura: "))
print("No Rio a temperatura é de", (26 * 9/5) + 32., "graus  Fahrenheit.")

Digite a temperatura: 
33
No Rio a temperatura é de 78.8 graus  Fahrenheit.


** Process exited - Return Code: 0 **
Press Enter to exit terminal

5- def coletar_nomes():
    nomes = []  # Inicializa uma lista vazia para armazenar os nomes
    
    while True:  # Inicia um loop que vai continuar até ser interrompido
        nome = input("Digite um nome (ou 'sair' para encerrar): ")  # Pede ao usuário para digitar um nome
        
        if nome.lower() == 'sair':  # Verifica se o usuário digitou 'sair'
            break  # Sai do loop se o nome for 'sair'
        
        nomes.append(nome)  # Adiciona o nome à lista de nomes
    
    # Após sair do loop, imprime todos os nomes que foram digitados
    print("Nomes digitados:")
    for nome in nomes:  # Itera sobre a lista de nomes
        print(nome)  # Imprime cada nome em uma nova linha

# Chama a função para executar
coletar_nomes()

Digite um nome (ou 'sair' para encerrar): 
Rafael
Digite um nome (ou 'sair' para encerrar): 
Bernardo
Digite um nome (ou 'sair' para encerrar): 
Lohaine
Digite um nome (ou 'sair' para encerrar): 
Caio
Digite um nome (ou 'sair' para encerrar): 
Sair
Nomes digitados:
Rafael
Bernardo
Lohaine
Caio


** Process exited - Return Code: 0 **
Press Enter to exit terminal

18/09/2024
1- Definição de Direito: ciência que regula e define as relações interpessoais, sendo elas jurídicas ou físicas ou para com o Estado. Aplica-se usando a computação como uma ferramenta para automatizar o trabalho. 
Conhecer a computação para padronizar a tecnologia de investimentos, tomar decisões, solucionar os conflitos das relações entre pessoas, bem como usar como ferramenta de trabalho. 

2- a) Algoritmo - sequência finita de ações(passos), para resolver uma tarefa. sequência finita de ações executáveis (passos) para resolver um problema.
b) Nuvem - uma rede global de servidores, qual realiza armazenamento e processamento remoto. Camada de abstração que une computadores.
c) Servidor - é um computador ou software mais potente que um desktop comum, ou de modo mais abstrato, é um sistema computacional que presta serviços para outros programas. um computador potente, sistema computacional (programa de computador) que presta servico a outros programas - pode estar rodando servidor de e-mails ou arquivos.
d) Neutralidade da rede - principio que preza pela garantia da igualdade na internet. os provedores de internet nao podem preferenciar trafego nenhum
e) Arquivo - conjunto de dados que representa uma informação. mecanismo de persistência de dados.

3- Utiliza-se esta palavra para tratas diversas coisas diferentes. Uma mesma palavra que invoca diferentes sentidos, de acordo com diferentes níveis de abstração. - Não cai na prova essa Q.

4- Para automatizar processos de reptição. Celeridade nas atividades, repetindo mesma tarefa várias vezes.

5- Rede neural: inúmeros calculos matematicos, complexa e difícil de explicar.
Não pode ser usada, pois precisa de responsável humano para tomar decisão. Apesar de poder dar apoio, o médico é quem dá diagnóstico, ele é o responsável. - Questão - PROVA
A negativa de empréstimo precisa ser fundamentada: O algoritmo é complexo  para explicar a motivação da tomada de decisão, para oferecer ou não o empréstimo.

Modelo árvores de decisões, baseada em decisões anteriores, poderá ser usada na concessão de empréstimos. Construída de forma automática, a decisão é passível de explicação, justificativa do porque foi negada por exemplo.

6- Todo arquivo é só zero e um, binário. Arquivo de texto é especial, todos 0 e 1, representam SEMPRE caracteres.
No  arquivo binário, 0 e 1 podem representar números interios, bits, objetos, simbolos, cores. No de texto, somente representa caracteres. - Questão - PROVA
Arquivo de texto lido por qualquer programa que leia arquivo de textos - Arquivo  de Texto
Programa precisa saber regra de formacao do arquivo, o que bits significam - Arquivo Binário

7- Formato de arquivos abertos - a especificacao é publica, padrao aberto para quem quer usar - html.
Formato de arquivos proprietários - a especificacao do formato é controlada por organizacao/empresa que detem direitos de sua utilizacao e pode licenciar de acordo com seus proprios interesses particulares. pode controlar quem vai usar o formato do arquivo! 

Dados publicos devem ser disponibilizados em formato de arquivo aberto, pois facilita acesso a infos, garante perenidade dos atos.

8- Protocolo Comunicação Aberto - tem suas especificações públicas, garante acesso público. 
Protocolo Comunicação Proprietário - controlada por empresa que detem direito de uso e licencia de acordo com seu proprio interesse.

Fato da internet ser baseada em protocolo aberto, facilita novas aplicações. Existência do protocolo aberto viabiliza, facilita criação de novas aplicações e novos empreendimentos.
Por exemplo, usa-se o protocolo para comecar e você pode criar o seu próprio para comercializar. 

O aberto facilita o desenvolvimento de inovações, enquanto o proprietário possibilita além da inovação, a comercialização e remuneração.

Liberdade economica de desenvolvimento, inovar conforme interesse comercial, libera uso a quem paga.

O proprietário pode ser construido em cima do aberto.

9- a)
b)
c)

10-

11-
